#! /bin/sh

# System startup script for the EBKuS server
#  -- for debian systems --
# 
# There is one separate script for each EBKuS instance.
# The name of the script is ebkus_$INSTANCE_NAME.
#
### BEGIN INIT INFO
# Provides: ebkus_%(INSTANCE_NAME)s
# Required-Start:    $local_fs mysql apache2
# Required-Stop:     $local_fs $remote_fs
# Default-Start:     2 3 5
# Default-Stop:      S 0 1 6
# Short-Description: EBKuS Start Skript
# Description:    Start ebkus_%(INSTANCE_NAME)s server
### END INIT INFO

# Author: Albrecht Schmiedel <atms@alibi.in-berlin.de>

EBKUS_USER="%(EBKUS_USER)s"
PYTHON_BIN="%(PYTHON_EXECUTABLE)s"
test -x $PYTHON_BIN || exit 5
EBKUS_START="%(INSTANCE_HOME)s/start.py"
test -x $EBKUS_START || exit 5
EBKUS_STOP="%(INSTANCE_HOME)s/stop.py"
test -x $EBKUS_STOP || exit 5
EBKUS_STATUS="%(INSTANCE_HOME)s/status.py"
test -x $EBKUS_STATUS || exit 5


# PATH should only include /usr/* if it runs after the mountnfs.sh script
PATH=/usr/sbin:/usr/bin:/sbin:/bin
DESC="EBKuS %(INSTANCE_NAME)s"
NAME=ebkus_%(INSTANCE_NAME)s
SCRIPTNAME=/etc/init.d/$NAME

# Load the VERBOSE setting and other rcS variables
[ -f /etc/default/rcS ] && . /etc/default/rcS

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.0-6) to ensure that this file is present.
. /lib/lsb/init-functions

#
# Function that starts the daemon/service
#
do_start()
{
	#   0 if daemon has been started
	#   1 if daemon was already running
	#   2 if daemon could not be started // klappt vermutlich nicht
        sudo -u $EBKUS_USER $PYTHON_BIN $EBKUS_STATUS > /dev/null && return 1
        sudo -u $EBKUS_USER $PYTHON_BIN $EBKUS_START &
	RETVAL="$?"
	[ "$RETVAL" = 0 ] && return 0
        return 2
}
do_status()
{
	#   0 if running
	#   1 otherwise
        sudo -u $EBKUS_USER $PYTHON_BIN $EBKUS_STATUS > /dev/null && return 0
        return 1
}

#
# Function that stops the daemon/service
#
do_stop()
{

	#   0 if daemon has been stopped
	#   1 if daemon was already stopped
	#   2 if daemon could not be stopped // not implemented atms
	#   other if a failure occurred
        sudo -u $EBKUS_USER $PYTHON_BIN $EBKUS_STOP > /dev/null && return 0
	return 1
}

#
# Function that sends a SIGHUP to the daemon/service
#
do_reload() {
	#
	# If the daemon can reload its configuration without
	# restarting (for example, when it is sent a SIGHUP),
	# then implement that here.
	#
	return 1
}

case "$1" in
  status)
        log_begin_msg "Status $DESC" "$NAME"
	do_status
	case "$?" in
		0) log_end_msg 0 ;;
		*) log_end_msg 1 ;;
	esac
	;;
  start)
        log_begin_msg "Starting $DESC" "$NAME"
	do_start
	case "$?" in
		0|1) log_end_msg 0 ;;
		2) log_end_msg 1 ;;
	esac
	;;
  stop)
	log_begin_msg "Stopping $DESC" "$NAME"
	do_stop
	case "$?" in
		0|1) log_end_msg 0 ;;
		2) log_end_msg 1 ;;
	esac
	;;
  restart|force-reload)
	#
	# If the "reload" option is implemented then remove the
	# 'force-reload' alias
	#
	log_daemon_msg "Restarting $DESC" "$NAME"
	do_stop
	case "$?" in
	  0|1)
		do_start
		case "$?" in
			0) log_end_msg 0 ;;
			1) log_end_msg 1 ;; # Old process is still running
			*) log_end_msg 1 ;; # Failed to start
		esac
		;;
	  *)
	  	# Failed to stop
		log_end_msg 1
		;;
	esac
	;;
  *)
	#echo "Usage: $SCRIPTNAME {start|stop|restart|reload|force-reload}" >&2
	echo "Usage: $SCRIPTNAME {start|stop|restart|force-reload}" >&2
	exit 3
	;;
esac

:
